name: Complete DevSecOps CI/CD pipeline

on: 
  push:
    branches:
      - "master"

jobs:
  sast-scan:
    runs-on: ubuntu-latest
    name: Run SonarQube with Maven
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven and analyze with SonarQube
        run:  mvn -B verify sonar:sonar -Dsonar.projectKey=snyksonardemo -Dsonar.organization=snyksonardemo -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  sca-scan:
    needs: sast-scan
    runs-on: ubuntu-latest
    name: Maven using Snyk security scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true 
        with:
          snyk-token: ${{ secrets.SNYK_TOKEN }}

  zap_scan:
    needs: sca-scan
    runs-on: ubuntu-latest
    name: Scan the webapplication
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Build Image
        run: docker build -t owasp-zap-poc .
      - name: Run Docker Container
        run: docker run -d -p 8080:8080 owasp-zap-poc
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:8080'
